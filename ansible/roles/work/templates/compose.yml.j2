---
name: monitoring

services:
  # image with major.minor.patch
  autoheal:
    image: willfarrell/autoheal:1.2.0@sha256:31f580ef0279eaced5b38d631b08c474d70d8403c1c2fdd6ddcf2e879d5f3f7c # editorconfig-checker-disable-line
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      AUTOHEAL_CONTAINER_LABEL: all
    restart: always

  # image with major.minor
  portainer:
    image: portainer/portainer-ce:2.17.1@sha256:9fa1ec78b4e29d83593cf9720674b72829c9cdc0db7083a962bc30e64e27f64e # editorconfig-checker-disable-line
    volumes:
      - "{{ volumes_directory }}/portainer:/data"

      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8000:8000"
      - "9000:9000"
    restart: always

  # image with major
  mongodb:
    image: mongo:4@sha256:7fb082eda5d1096c7749bd3890f0e23ad99fc5059902b5e47df8873d059c749a # editorconfig-checker-disable-line
    user: "{{ ansible_manager_user_uid }}:{{ ansible_manager_user_gid }}"
    environment:
      TZ: "{{ timezone }}"
    volumes:
      - "{{ volumes_directory }}/mongodb/db:/data/db"
    restart: always

  # image with latest
  docker-socket-proxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest@sha256:6c22b9545adc95258af9deffdde6c0ce0a0a70716771e5a4e02d24d1b6e0dda1 # editorconfig-checker-disable-line
    environment:
      CONTAINERS: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "2375:2375"
    restart: always

  # image with docker digest update (1/3)
  plex:
    image: lscr.io/linuxserver/plex:1.31.2@sha256:456bc2be6482698755d96542d7f00449077b988c61f57123acc913105ed7ac13 # editorconfig-checker-disable-line
    environment:
      TZ: "{{ timezone }}"

      PUID: "{{ ansible_admin_user_uid }}"
      PGID: "{{ ansible_admin_user_gid }}"
    volumes:
      - "{{ volumes_directory }}/plex/config:/config"

      - "{{ media_directory }}/tv:/tv"
      - "{{ media_directory }}/movies:/movies"
    devices:
      - /dev/dri:/dev/dri
    network_mode: host
    healthcheck:
      test: >
        (curl -f http://localhost:32400/identity && curl -f api.ipify.org) ||
        exit 1
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 60s
    restart: always

  # image with docker digest update (2/3)
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:4.5.2@sha256:3fd349a55bd9bb9f5b45bac0bb6ab173f4d02acb53709a1b9d30b4e51a043b3b # editorconfig-checker-disable-line
    environment:
      TZ: "{{ timezone }}"

      PUID: "{{ ansible_admin_user_uid }}"
      PGID: "{{ ansible_admin_user_gid }}"

      WEBUI_PORT: 28080
    volumes:
      - "{{ volumes_directory }}/qbittorrent/config:/config"

      - "{{ downloads_directory }}/torrents:/downloads"
    network_mode: service:gluetun
    healthcheck:
      test: (curl -f http://localhost:28080 && curl -f api.ipify.org) || exit 1
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 60s
    restart: always

  # image with docker digest update (3/3)
  radarr:
    image: lscr.io/linuxserver/radarr:4.3.2@sha256:29e7385c3e0be877c81d1e2ba54b3f6b527d2c4c5f527b17390d820f943346c6 # editorconfig-checker-disable-line
    environment:
      TZ: "{{ timezone }}"

      PUID: "{{ ansible_admin_user_uid }}"
      PGID: "{{ ansible_admin_user_gid }}"
    volumes:
      - "{{ volumes_directory }}/radarr/config:/config"

      - "{{ downloads_directory }}:/downloads"
      - "{{ media_directory }}/movies:/movies"
    network_mode: service:gluetun
    healthcheck:
      test: (curl -f http://localhost:7878 && curl -f api.ipify.org) || exit 1
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 60s
    restart: always

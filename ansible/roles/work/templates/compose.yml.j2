---
name: monitoring

services:
  # image with major.minor.patch
  autoheal:
    image: willfarrell/autoheal:1.2.0@sha256:31f580ef0279eaced5b38d631b08c474d70d8403c1c2fdd6ddcf2e879d5f3f7c # editorconfig-checker-disable-line
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      AUTOHEAL_CONTAINER_LABEL: all
    restart: always

  # image with major.minor
  portainer:
    image: portainer/portainer-ce:2.20.3@sha256:f5277f6cab33b3471148fb00dc4b4a09995ba64b473448a58f616d202686564b # editorconfig-checker-disable-line
    volumes:
      - "{{ volumes_directory }}/portainer:/data"

      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8000:8000"
      - "9000:9000"
    restart: always

  # image with major
  mongodb:
    image: mongo:4@sha256:e102bde93f3a876642d91d6dfcc2902308335cb7414b74b116e0692a8622c7b3 # editorconfig-checker-disable-line
    user: "{{ ansible_manager_user_uid }}:{{ ansible_manager_user_gid }}"
    environment:
      TZ: "{{ timezone }}"
    volumes:
      - "{{ volumes_directory }}/mongodb/db:/data/db"
    restart: always

  # image with latest
  docker-socket-proxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest@sha256:6c22b9545adc95258af9deffdde6c0ce0a0a70716771e5a4e02d24d1b6e0dda1 # editorconfig-checker-disable-line
    environment:
      CONTAINERS: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "2375:2375"
    restart: always

  # image with docker digest update (1/3)
  plex:
    image: lscr.io/linuxserver/plex:1.40.2@sha256:addec5e26fb63af661992e0c50e0bd6f7a271433cd2a058f130e0ec1bae415e4 # editorconfig-checker-disable-line
    environment:
      TZ: "{{ timezone }}"

      PUID: "{{ ansible_admin_user_uid }}"
      PGID: "{{ ansible_admin_user_gid }}"
    volumes:
      - "{{ volumes_directory }}/plex/config:/config"

      - "{{ media_directory }}/tv:/tv"
      - "{{ media_directory }}/movies:/movies"
    devices:
      - /dev/dri:/dev/dri
    network_mode: host
    healthcheck:
      test: >
        (curl -f http://localhost:32400/identity && curl -f api.ipify.org) ||
        exit 1
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 60s
    restart: always

  # image with docker digest update (2/3)
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:4.6.5@sha256:31305198287f8b954b7f97cf3fd7e3e63da5e4887a3979b02325969fb891dd67 # editorconfig-checker-disable-line
    environment:
      TZ: "{{ timezone }}"

      PUID: "{{ ansible_admin_user_uid }}"
      PGID: "{{ ansible_admin_user_gid }}"

      WEBUI_PORT: 28080
    volumes:
      - "{{ volumes_directory }}/qbittorrent/config:/config"

      - "{{ downloads_directory }}/torrents:/downloads"
    network_mode: service:gluetun
    healthcheck:
      test: (curl -f http://localhost:28080 && curl -f api.ipify.org) || exit 1
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 60s
    restart: always

  # image with docker digest update (3/3)
  radarr:
    image: lscr.io/linuxserver/radarr:5.6.0@sha256:4b8d6111bd6708e27741ce427b1a200a2203977187e6a76e9a5b494f43bfeb74 # editorconfig-checker-disable-line
    environment:
      TZ: "{{ timezone }}"

      PUID: "{{ ansible_admin_user_uid }}"
      PGID: "{{ ansible_admin_user_gid }}"
    volumes:
      - "{{ volumes_directory }}/radarr/config:/config"

      - "{{ downloads_directory }}:/downloads"
      - "{{ media_directory }}/movies:/movies"
    network_mode: service:gluetun
    healthcheck:
      test: (curl -f http://localhost:7878 && curl -f api.ipify.org) || exit 1
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 60s
    restart: always

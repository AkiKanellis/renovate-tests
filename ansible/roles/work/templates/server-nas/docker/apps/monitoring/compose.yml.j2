---
services:
  netdata:
    image: netdata/netdata:v1.36.1@sha256:a9c803191570d6f28f7e872673ee55f69dbfa7a17c3f99cb7c46ed799088ead0 # editorconfig-checker-disable-line
    hostname: "netdata-{{ inventory_hostname }}"
    environment:
      DOCKER_HOST: docker-socket-proxy:2375
      TZ: "{{ timezone }}"
    volumes:
      - "{{ volumes_directory }}/netdata:/etc/netdata:ro"

      - /etc/group:/host/etc/group:ro
      - /etc/passwd:/host/etc/passwd:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    ports:
      - "19999:19999"
    security_opt:
      - apparmor:unconfined
    cap_add:
      - SYS_PTRACE
    restart: always

  docker-socket-proxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:0.1.1@sha256:6c22b9545adc95258af9deffdde6c0ce0a0a70716771e5a4e02d24d1b6e0dda1 # editorconfig-checker-disable-line
    environment:
      CONTAINERS: 1
      TZ: "{{ timezone }}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "2375:2375"
    restart: always

  prometheus:
    image: prom/prometheus:v2.40.2@sha256:08dde1767993e5fee7539ec3d3462aded997981691a4d3c0cfe567beef89e5b5 # editorconfig-checker-disable-line
    user: "{{ ansible_manager_user_uid }}:{{ ansible_manager_user_gid }}"
    environment:
      TZ: "{{ timezone }}"
    volumes:
      - "{{ volumes_directory }}/prometheus/etc-prometheus:/etc/prometheus"
      - "{{ volumes_directory }}/prometheus/prometheus:/prometheus"
    ports:
      - "9090:9090"
    restart: always

  unpoller:
    image: ghcr.io/unpoller/unpoller:v2.1.9@sha256:2e81595ce317982044c185afe368a71d8d619de3296160605666667f0424648a # editorconfig-checker-disable-line
    #user: "{{ ansible_manager_user_uid }}:{{ ansible_manager_user_gid }}"
    environment:
      TZ: "{{ timezone }}"
    volumes:
      - "{{ volumes_directory }}/unpoller/config:/config"
    ports:
      - "9130:9130"
    restart: always

  grafana:
    image: grafana/grafana-oss:9.2.5@sha256:4b2606fb9abcf3af41b7409656dd5a7bf28d093b23c26603623ee09c79454afd # editorconfig-checker-disable-line
    user: "{{ ansible_manager_user_uid }}:{{ ansible_manager_user_gid }}"
    environment:
      GF_INSTALL_PLUGINS: >
          grafana-clock-panel,grafana-piechart-panel,natel-discrete-panel
      TZ: "{{ timezone }}"
    volumes:
      - "{{ volumes_directory }}/grafana/etc-grafana:/etc/grafana"
      - "{{ volumes_directory }}/grafana/var-lib-grafana:/var/lib/grafana"
    ports:
      - "3000:3000"
    restart: always

  graylog:
    image: graylog/graylog:5.0.2@sha256:ceda60c2078e5d38fe12cd7b3f56f1321f74cc873de70c4b7120649b4862fc69 # editorconfig-checker-disable-line
    environment:
      TZ: "{{ timezone }}"
    volumes:
      - "{{ volumes_directory }}/graylog:/usr/share/graylog/data"
    ports:
      # Syslog
      - "514:514"
      - "514:514/udp"
      # Web interface and REST API
      - "9900:9900"
      # GELF
      - "12201:12201"
      - "12201:12201/udp"
    entrypoint: >
      /usr/bin/tini -- wait-for-it elasticsearch:9200 -- /docker-entrypoint.sh
    links:
      - mongodb:mongo
      - elasticsearch
    depends_on:
      - mongodb
      - elasticsearch
    restart: always

  mongodb:
    image: mongo:4.4.18@sha256:ca10c7c235f7b56826ed10a57b5246b482d8e19e19d8521831fc26693602a75e # editorconfig-checker-disable-line
    user: "{{ ansible_manager_user_uid }}:{{ ansible_manager_user_gid }}"
    environment:
      TZ: "{{ timezone }}"
    volumes:
      - "{{ volumes_directory }}/mongodb/db:/data/db"
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2@sha256:2c257b68f361872e13bdd476cba152e232a314ec61b0eedfc1f71b628ba39432 # editorconfig-checker-disable-line
    environment:
      http.host: 0.0.0.0
      network.host: 0.0.0.0
      transport.host: localhost
      TZ: "{{ timezone }}"
    volumes:
      - "{{ volumes_directory }}/elasticsearch:/usr/share/elasticsearch/data"
    restart: always

  autoheal:
    image: willfarrell/autoheal:1.2.0@sha256:31f580ef0279eaced5b38d631b08c474d70d8403c1c2fdd6ddcf2e879d5f3f7c # editorconfig-checker-disable-line
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      AUTOHEAL_CONTAINER_LABEL: all
      TZ: "{{ timezone }}"
    restart: always

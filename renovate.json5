{
  $schema: "https://docs.renovatebot.com/renovate-schema.json",
  extends: [
    "config:recommended",

    ":semanticCommitType(build)",
    ":semanticCommitTypeAll(build)",

    "docker:pinDigests",

    "group:allNonMajor",

    "helpers:pinGitHubActionDigests"
  ],
  username: "aki-bot[bot]",
  gitAuthor: "aki-bot <103840025+aki-bot[bot]@users.noreply.github.com>",
  platform: "github",
  repositories: ["akikanellis/renovate-tests"],
  branchPrefix: "update-dependencies-",
  onboarding: false,
  requireConfig: "required",
  automerge: true,
  prHourlyLimit: 50,
  customManagers: [
    {
      description: "Update Renovate in GitHub Action workflows",
      customType: "regex",
      fileMatch: ["^\\.github\\/(actions|workflows)\\/.+\\.ya?ml$"],
      matchStrings: [
        "renovate-version\\s*:\\s*(\"|')?(?<currentValue>.+)(\"|')?\
        (\\s+|\\s+.*)"
      ],
      datasourceTemplate: "docker",
      depNameTemplate: "ghcr.io/renovatebot/renovate"
    },
    {
      description: "Update Python in GitHub Action workflows",
      customType: "regex",
      fileMatch: ["^\\.github\\/(actions|workflows)\\/.+\\.ya?ml$"],
      matchStrings: [
        "python-version\\s*:\\s*(\"|')?(?<currentValue>.+)(\"|')?\
        (\\s+|\\s+.*)"
      ],
      extractVersionTemplate: "^v(?<version>\\S+)",
      datasourceTemplate: "github-tags",
      depNameTemplate: "python",
      packageNameTemplate: "python/cpython"
    },
    {
      description: "Update Java in .tool-versions.\
      The asdf manager for renovate does not currently support the temurin\
      distribution.\
      See:\
        * https://github.com/renovatebot/renovate/issues/19183\
        * https://github.com/renovatebot/renovate/issues/19184",
      customType: "regex",
      // eslint-disable-next-line jsonc/no-useless-escape
      fileMatch: ["(^|/)\.tool-versions$"],
      matchStrings: ["java\\s+temurin-(?<currentValue>.+)(\\s+|\\s+.*)"],
      datasourceTemplate: "java-version",
      depNameTemplate: "java"
    },
    {
      description: "Update Java in Gradle files",
      customType: "regex",
      // eslint-disable-next-line jsonc/no-useless-escape
      fileMatch: ["(^|/).+.gradle(.kts)?$"],
      matchStrings: [
        "javaVersion\\s*=\\s*(\"|')?(?<currentValue>\\d+)(\"|')?(\\s+|\\s+.*)"
      ],
      extractVersionTemplate: "^(?<version>\\d+)$",
      datasourceTemplate: "java-version",
      depNameTemplate: "java"
    },
    {
      description: "Any other file with dependencies",
      customType: "regex",
      fileMatch: [
        /* eslint-disable jsonc/no-useless-escape */
        "(^|/)justfile$",
        "(^|/).+\.gradle(\.kts)?$",
        "(^workflow-templates|\.github/workflows)/[^/]+\.ya?ml$",
        "(^|/)action\.ya?ml$",
        "^ansible/.*vars/[^/]+\.ya?ml$"
        /* eslint-enable jsonc/no-useless-escape */
      ],
      matchStrings: [
        "\
.*renovate:\
\\sdatasource=(?<datasource>.*?)\
\\sdepName=(?<depName>.*?)\
(\\sversioning=(?<versioning>.*?))?\
\n.*(version|Version|VERSION)\\s*(:=|=|:)\\s*\"?(?<currentValue>.*?)\
(@(?<currentDigest>sha256:[a-f0-9]+))?\"?\
(\\s+|\\s+.*)"
      ],
      versioningTemplate: "\
{{#if versioning}}\
{{{versioning}}}\
{{else}}\
semver-coerced\
{{/if}}"
    }
  ],
  packageRules: [
    {
      description: "Block automerge for major updates",
      matchUpdateTypes: ["major"],
      automerge: false
    },
    {
      description: "Group Docker digest updates",
      groupName: "all Docker digest dependencies",
      groupSlug: "all-docker-digest",
      matchDatasources: ["docker"],
      matchUpdateTypes: ["digest"]
    },
    {
      description: "Disable Renovate digest pinning in GitHub Action\
      workflows",
      matchManagers: ["regex"],
      matchDatasources: ["docker"],
      matchPackageNames: ["ghcr.io/renovatebot/renovate"],
      matchFileNames: [
        ".github/actions/**/*.y*ml",
        ".github/workflows/*.y*ml"
      ],
      matchUpdateTypes: ["pinDigest"],
      enabled: false
    },
    {
      description: "Limit semantic-release versions to 21.x.x.\
      Version 22.x.x is currently not compatible with\
      gradle-semantic-release-plugin",
      matchDatasources: ["npm"],
      matchPackageNames: ["semantic-release"],
      allowedVersions: "<= 21"
    },
    {
      description: "Limit conventional-changelog-conventionalcommits versions\
      to 6.x.x. Version 7.x.x is currently only compatible with\
      semantic-release >= 22",
      matchDatasources: ["npm"],
      matchPackageNames: ["conventional-changelog-conventionalcommits"],
      allowedVersions: "<= 6"
    },
    {
      description: "Limit gradle-semantic-release-plugin versions to 1.7.7.\
      Version 1.7.7 is currently only compatible with semantic-release <= 21",
      matchDatasources: ["npm"],
      matchPackageNames: ["gradle-semantic-release-plugin"],
      allowedVersions: "<= 1.7.7"
    },
    {
      description: "Use correct compatibility for ghcr.io/super-linter/super-linter",
      matchDatasources: ["docker"],
      matchPackageNames: ["ghcr.io/super-linter/super-linter"],
      versioning: "\
regex:\
^((?<compatibility>.+)-)?\
v?\
(?<major>\\d+)\
(\\.(?<minor>\\d+))?\
(\\.(?<patch>\\d+))?$"
    },
    {
      description: "Limit lscr.io/linuxserver/heimdall versions to 2020.x.x.\
      There is a single 2021.x.x version which interferes with the normal\
      versions it exposes causing older versions being pulled in as if they are\
      newer",
      matchDatasources: ["docker"],
      matchPackageNames: ["lscr.io/linuxserver/heimdall"],
      allowedVersions: "<= 2020"
    },
    {
      description: "Limit lscr.io/linuxserver/qbittorrent versions to 13.x.x.\
      The versioning changed from version 14.x.x - 20.x.x causing older\
      versions being pulled in as if they are newer",
      matchDatasources: ["docker"],
      matchPackageNames: ["lscr.io/linuxserver/qbittorrent"],
      allowedVersions: "<= 13"
    },
    {
      description: "Limit mongo versions to 4.x.x.\
      Version 5.0.0 introduced a minimum architecture which makes it\
      incompatible with the current architecture of `server-nas`\
      See:\
      https://www.mongodb.com/docs/manual/release-notes/5.0/#platform-support",
      matchDatasources: ["docker"],
      matchPackageNames: ["mongo"],
      allowedVersions: "<= 4"
    },
    {
      description: "Limit graylog versions to 4.x.x.\
      Version 5.0.0 introduced a minimum MongoDB version of 5.x.x which makes\
      it incompatible with the current mongo limitation\
      See:\
        - https://go2docs.graylog.org/5-0/changelogs/changelog.html\
        - https://github.com/Graylog2/graylog2-server/issues/13660",
      matchDatasources: ["docker"],
      matchPackageNames: ["graylog/graylog"],
      allowedVersions: "<= 4"
    }
  ],
  "docker-compose": {
    // eslint-disable-next-line jsonc/no-useless-escape
    fileMatch: ["(^|/)(?:docker-)?compose[^/]*\.ya?ml\.j2$"]
  }
}
